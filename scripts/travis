#!/bin/sh
set -e

./autogen.sh

if [ "x$ARCH" = "xnative" ]; then
	# test autotools
	./configure
	make -j 4 distcheck

	# make distribution
	make dist
	tar zxvf libressl-*.tar.gz
	cd libressl-*
	mkdir build-static
	mkdir build-shared

	cd build-static

	# test cmake and ninja
	if [ `uname` = "Darwin" ]; then
		cmake ..
		make
		make test

		cd ../build-shared
		cmake -DBUILD_SHARED_LIBS=ON ..
		make
		make test
	else
		sudo apt-get update
		sudo apt-get install -y cmake ninja-build

		cmake -GNinja ..
		ninja
		ninja test

		cd ../build-shared
		cmake -GNinja -DBUILD_SHARED_LIBS=ON ..
		ninja
		ninja test
	fi

elif [ "x$ARCH" = "xmingw32" -o "x$ARCH" = "xmingw64" ]; then
	sudo apt-get update
	sudo apt-get install -y cmake ninja-build

	CPU=i686
	if [ "x$ARCH" = "xmingw64" ]; then
		CPU=x86_64
	fi
	export CC=$CPU-w64-mingw32-gcc

	if [ -z $(which $CC) ]; then
		sudo apt-get update
		sudo apt-get install -y mingw-w64 make
		export PATH=$PATH:/opt/$ARCH/bin
	fi

	./configure --host=$CPU-w64-mingw32
	make -j

	(
	 rm -fr build-static
	 mkdir build-static
	 cd build-static
	 cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../scripts/$CPU-w64-mingw32.cmake ..
	 ninja
	)
	(
	 rm -fr build-shared
	 mkdir build-shared
	 cd build-shared
	 cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../scripts/$CPU-w64-mingw32.cmake -DBUILD_SHARED_LIBS=ON ..
	 ninja
	)

elif [ "x$ARCH" = "xandroid" ]; then
	echo "----------------------------------------"
	sudo apt-get install -y g++-arm-linux-gnueabihf
	sudo ln -s /usr/arm-linux-gnueabihf/lib /lib/arm-linux-gnueabihf
	sudo ln -s /lib/arm-linux-gnueabihf/ld-2.19.so /lib/ld-linux-armhf.so.3

	export ABI=armeabi-v7a
	export NAL=21

	echo y | sdkmanager 'platforms;android-'$NAL
	echo y | sdkmanager "system-images;android-"$NAL";google_apis;"$ABI
	echo y | sdkmanager 'ndk-bundle'
	echo y | sdkmanager 'cmake;3.6.4111459'
	echo y | sdkmanager 'lldb;3.0'
	echo y | sdkmanager --update
	echo y | sdkmanager --licenses

	export CMAKE=$ANDROID_HOME/cmake/3.6.4111459/bin/cmake
	export NINJA=$ANDROID_HOME/cmake/3.6.4111459/bin/ninja
	export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
	export TC_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake

	(
	 rm -fr build
	 mkdir build
	 cd build
	 $CMAKE -GNinja \
		-DCMAKE_MAKE_PROGRAM=$NINJA \
		-DANDROID_NDK=$ANDROID_NDK_HOME \
		-DCMAKE_TOOLCHAIN_FILE=$TC_FILE \
		-DANDROID_ABI=$ABI \
		-DANDROID_NATIVE_API_LEVEL=$NAPI \
		..
	 echo "----------------------------------------"
	 $CMAKE --build .
	 #echo "----------------------------------------"
	 #sdkmanager --list --verbose > a.txt
	 #grep system-images a.txt
	 #echo "----------------------------------------"
	 #android list target
	 #echo "----------------------------------------"
	 #echo no | avdmanager -v create avd -f -n test -k "system-images;android-"$NAL";google_apis;"$ABI
	 #echo "----------------------------------------"
	 #$ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
	 #echo "----------------------------------------"
	 #android-wait-for-emulator
	 #echo "----------------------------------------"
	 #adb shell input keyevent 82 &
	 echo "----------------------------------------"
	 $CMAKE --build . --target test
	)
fi
